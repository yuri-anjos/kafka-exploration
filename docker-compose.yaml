version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    restart: unless-stopped
    networks:
      - broker-kafka
    environment: 
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    restart: unless-stopped
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.1
    container_name: kafdrop
    restart: unless-stopped
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  json-consumer:
    container_name: json-consumer
    restart: unless-stopped
    build: ./json-consumer/
    ports:
      - "8101:8101"
    environment:
      KAFKA_HOST: kafka:29092
    volumes:
      - broker-kafka-data:/temp
    networks:
      - broker-kafka
    depends_on:
      - kafka

  payment-service:
    container_name: payment-service
    restart: unless-stopped
    build: ./payment-service/
    ports:
      - "8001:8001"
    environment:
      KAFKA_HOST: kafka:29092
    volumes:
      - broker-kafka-data:/temp
    networks:
      - broker-kafka
    depends_on:
      - kafka

  str-consumer:
    container_name: str-consumer
    restart: unless-stopped
    build: ./str-consumer/
    ports:
      - "8100:8100"
    environment:
      KAFKA_HOST: kafka:29092
    volumes:
      - broker-kafka-data:/temp
    networks:
      - broker-kafka
    depends_on:
      - kafka

  str-producer:
    container_name: str-producer
    restart: unless-stopped
    build: ./str-producer/
    ports:
      - "8000:8000"
    environment:
      KAFKA_HOST: kafka:29092
    volumes:
      - broker-kafka-data:/temp
    networks:
      - broker-kafka
    depends_on:
      - kafka

networks:
  broker-kafka:

volumes:
  broker-kafka-data: {}